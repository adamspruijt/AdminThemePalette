

.InputfieldForm {
	position: relative;
	z-index: 105;
	overflow: hidden;
	// margin-bottom: 1em;

	.Inputfields,
	.Inputfields > .Inputfield {
		list-style: none;
		padding: 0;
	}

	.Inputfields .Inputfields {
		/* nested .Inputfields list needs no bottom margin since it'll already be offset from the parent's padding */
		margin-bottom: 0;
	}

	.Inputfields > .InputfieldColumnWidth {
		/* an Inputfield that has a percentage width assigned to it */
		float: left;
		clear: none;
		margin-top: 0;
	}

	.Inputfields {


		.InputfieldColumnWidthFirst,
		.InputfieldColumnWidth + .InputfieldSubmit {
			/* first Inputfield with a percent width... */
			/* ...or the last percentage-width Inputifeld before the submit button */
			clear: both;
			margin-left: 0;
		}


		.InputfieldColumnWidthFirstTmp,
		.InputfieldColumnWidthFirst.InputfieldStateHidden + .Inputfield {
			/* for support of inputfield dependencies */
			clear: both;
			margin-left: 0;
		}

		.InputfieldColumnWidth:not(.InputfieldColumnWidthFirst) .InputfieldHeader,
		.InputfieldColumnWidth:not(.InputfieldColumnWidthFirst) .InputfieldContent {
			margin-left: -1px;
		}


		.InputfieldPageListSelectMultiple ol li,
		.InputfieldPageAutocomplete ol li,
		.asmListItem{
			// margin: 0 0 2px 0 !important;
			padding-left: 0.4em;
			height: 22px !important;	
			position: relative;		
			> .ui-icon:first-child{
				position: absolute;
				margin-top: 3px;
			}
		}
		
		.itemRemove,
		.asmListItemRemove {
			padding: 3px 4px 3px 5px;
			border: 1px solid transparent;
			border-left: 0;
			color: @gray;
			// background: @subtle-bg;
			position: absolute !important;
			z-index: 50;
			top: 0 !important;
			right: 0 !important;

			height: 22px;
			width: 22px;
			
		}
		li:hover > .itemRemove,
		.asmListItem:hover > .asmListItemRemove {
			// display: block;
			color: @white;
			background: @red;
			border-color:@dark-red;

		}
		li:hover  .itemRemove:hover,
		.asmListItem:hover .asmListItemRemove:hover {
			// background: darken(@red, 10%);
			border-color: @red;
			box-shadow: 0 0 6px 1px @light-red;
			color: lighten(@light-red, 10%);

		}
		.itemLabel,
		.asmListItemLabel {
			padding-left: 1em;
			display: inline-block;
			text-overflow:ellipsis;
		}
		.itemLabel{
			max-width: 90%;
			text-overflow:ellipsis;
			overflow: hidden;
			white-space: nowrap;
		}
		.InputfieldPageListSelectMultiple ol li > .ui-icon:first-child,
		.InputfieldPageAutocomplete ol li > .ui-icon:first-child,
		.asmListItemHandle{
			color: @gray !important;
		}
		.InputfieldPageAutocomplete{
			> p{
				position: relative;
			}
			input{
				width: 100%;
			}
			.InputfieldPageAutocompleteNote{
				position: absolute;
				top: 1px;
				bottom: 1px;
				right: 1px;
				// display: inline-block !important;
				padding: 5px 8px!important;
				line-height: 13px;

				margin: 0;
				// background: #eee;
				border: 0;
				font-weight: bold;
				border-left: 1px solid #ddd;
				// color: @green;
				font-size: 0.8em;
				br{
					display: none;
				}
			}
		}


		.InputfieldWrapper{
			margin: 0px -1px;
			
		}
	}

	/**
	 * Margin and padding tweaks to prevent doubled visual whitespace
	 *
	 */

	.Inputfields > .Inputfield:not(.InputfieldSubmit) > .InputfieldContent > *:first-child,
	.Inputfields > .Inputfield > .InputfieldContent > div > *:first-child,
	.Inputfields > .Inputfield:first-child {
		/* first child element of an Inputfield or it's content needs no top margin since it is already padded */
		margin-top: 0;
	}

	.Inputfields .Inputfields > .Inputfield:last-child,
	.Inputfields > .Inputfield > .InputfieldContent > *:last-child {
		/* last child element in an Inputfield content needs no margin since it is already padded */
		margin-bottom: 0;
	}

}

.Inputfields {

	height: auto;

	fieldset,
	input,
	select,
	textarea,
	label {
		/* reset */
		margin: 0;
		padding: 0;
		border-radius: 0;
		vertical-align: baseline;
	}

	label {
		display: block;
	}

	.Inputfield,
	label,
	input,
	select,
	textarea,
	table {
		height: auto;
	}

	input,
	select,
	textarea {
		font-size: 1em;
		max-width: 100%;
		padding: 0.4em 0.6em;

	}

	input,
	textarea {
		/* slight padding for input and textarea elements... */
		border: 1px solid @light-gray;
		
		line-height: 1.3em;
	}

	textarea,
	input.InputfieldMaxWidth {
		width: 100%;
	}

	input[type=checkbox],
	input[type=radio] {
		/* ...but no padding for checkbox and radios */
		padding: 0;
	}

	.Inputfield {
		margin: 0; 
		margin-bottom: -1px;
		background: @text-bg;
		overflow: visible !important;

	}


	.Inputfield.ui-state-error {
		border: none;
	}

	.InputfieldStateToggle {
		cursor: pointer;

		span.ui-icon:first-child,
		i.toggle-icon {
			/* the open/close icon that goes with most Inputfields */
			float: right;
			padding-right: 0.25em;
		}
		i.toggle-icon {
			padding-right: 0.5em;
			vertical-align: middle;
			// color: lighten(@label-link-color, 60%);
			// line-height: 1.7em;  WHHHHHHY!?!!?!?
		}

		.ui-icon + .ui-icon,
		i + i {
			margin-right: 0.5em;
			margin-left: none;
		}
	}

	.InputfieldStateCollapsed {
		.InputfieldHeader {
			/* different style for collapsed header */
			// padding-bottom: 0.75em;
			background: @label-link-collapsed-bg; /* WHITE */
			border: 1px solid @subtle-border; /* LIGHT-KHAKI */
			// border-bottom: 0;
			color: @label-link-collapsed-color;
			opacity: 0.6;
			&:hover {
				/* style for collapsed header when hovered */
				// color: @label-link-hover-color;
				border-color: @subtle-border; /* LIGHT-KHAKI */
				background: @text-bg; /* WHITE */
			}
		}
		.InputfieldContent {
			/* collapsed Inputfields don't show their content (only header) */
			display: none;
		}
	}

	.InputfieldHeader,
	.InputfieldWrapper > .description {
		background: @label-link-bg; /* WHITE */
		border: 1px solid @subtle-border; /* LIGHT-KHAKI */
		border-bottom: none;
		color: @dark-gray; /* BROWN */
	}
		.InputfieldHeader:hover {
			color: @label-link-hover-color;
		}
		.InputfieldWrapper > .description {
			margin: 0;
			padding-bottom: 1em;
			margin-bottom: -1em;
		}

	.InputfieldHeader + .InputfieldContent {
		padding: 0.25em 1em 1.25em 1em;
		border: 1px solid @subtle-border; /* LIGHT-KHAKI */
		border-top: none;

		// border-bottom: none;
		background: @text-bg; /* WHITE */
	}

	/**
	 * InputfieldMarkup
	 *
	 */

	.InputfieldMarkup .InputfieldContent {
		border: 1px solid @subtle-border; /* LIGHT-KHAKI */
		margin-top: 1em;
		padding: 1em;
	}
		.InputfieldMarkup .InputfieldHeader + .InputfieldContent {
			border-top: none;
			margin-top: 0;
			padding-top: 0;
		}

	/**
	 * Repeaters
	 *
	 */

	.InputfieldRepeater > .InputfieldContent {

		.InputfieldRepeaterItem > .InputfieldHeader {
			border: none;
			background: @item-header-bg; /* LIGHT-GREEN */
			color: @item-header-color; /* WHITE */
			padding: 0.25em 0.25em 0.25em 2em;

			a {
				color: @item-header-color; /* WHITE */
				cursor: pointer;
			}

			&:hover {
				background: @item-header-hover-bg;
				color: @item-header-hover-color;
				border: none;
			}

			i.toggle-icon {
				color: @item-header-color;
			}
		}

		.InputfieldRepeaterItem > .InputfieldContent {
			padding: 0;
			border: none;
		}

		.InputfieldRepeaterItem {
			margin-bottom: 1.25em;
		}

		.InputfieldRepeaterItem.InputfieldStateCollapsed {
			margin-bottom: 1em;
		}

		.InputfieldRepeaterItem > .InputfieldHeader.ui-state-error {
			text-decoration: line-through;
			background: @error-bg;
			border: none;
		}
		.InputfieldRepeaterItem > .InputfieldHeader .InputfieldRepeaterTrash {
			right: 2em;
		}
	}

	/**
	 * Item and file lists
	 *
	 */


	.InputfieldFileList > li {
		margin-top: 0;

		.InputfieldFileDescription input{
			border: 1px solid @light-gray;
			width: 100%;
			padding: 0.4em 0.6em;
		}

	}
	.InputfieldFileList .InputfieldFileItem {
		// border: @item-border;
	}
	.InputfieldFileMove{
		float: right;
	}
	.InputfieldFileList .InputfieldFileItem .ui-widget-content {
		border: @headline-border;
		border-top: 0;
		background: @subtle-bg;
	}



	.InputfieldImageGrid .InputfieldFileItem .ui-widget-content{
		border: 0;
		background: none;
	}

	.InputfieldItemList .InputfieldItemHeader {
		/* file or repeater item header */
		border: none;
		background: @item-header-bg; /* LIGHT-GREEN */
		color: @item-header-color; /* WHITE */
		padding: 0.4em 0.25em 0.4em 0.5em;
		cursor: move;
		font-weight: normal;
		vertical-align: middle;

		a {
			/* link in file or repeater item header */
			color: @item-header-color; /* WHITE */
		}

		&:hover {
			/* file or repeater item header in hover state */
			background: @item-header-hover-bg;
			color: @item-header-hover-color;
			border: none;
			a {
				color: @item-header-hover-color;
			}
		}

		.ui-icon {
			// margin-top: 2px;
		}
	}

	.InputfieldItemList .InputfieldItemHeader.ui-state-error {
		/* deleted item state */
		text-decoration: line-through;
		background: @error-bg;
		border: none;
	}

	.InputfieldPageNameURL {
		/* page name */
		/*font-size: 0.923076923076923em;*/
		font-size: 0.875em;
	}

}




.Inputfields > .Inputfield {
	display: block;
	clear: both;
}

.Inputfields > .Inputfield > .InputfieldContent:before,
.Inputfields > .Inputfield > .InputfieldContent:after,
.InputfieldForm:after {
    /* @soma clearfix */
    content: " ";
    display: table;
}
.Inputfields > .Inputfield > .InputfieldContent:after,
.InputfieldForm:after {
    /* @soma clearfix  */
    clear: both;
}

/**
 * Inputfield containers (InputfieldHeader, InputfieldContent)
 *
 */

.Inputfields .InputfieldHeader,
.InputfieldForm .InputfieldHeader,
.InputfieldForm label.InputfieldHeader,
.InputfieldWrapper > .description {
	/* typically the Inputfield's <label> */
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-o-user-select: none;
	user-select: none; /* prevent selection of this element */

	display: block;
	padding: 1em 0.25em 1em 1em;
	margin: 0;
	font-weight: bold;
}

/**
 * Styles for item listing inputfields
 *

.InputfieldItemList .InputfieldContent .InputfieldHeader {
	font-weight: bold;
	padding: 5px 10px;
	text-shadow: none;
}
 */

.InputfieldStateRequired > .InputfieldHeader:first-child:after {
	/* Add asterisk to indicate field is required */
	content: ' *';
	color: @red;
}

/****************************************************************************
 * Specific Inputfield types
 *
 * Defined here rather than as separate CSS files because their styles are
 * shared or there may be relationships with other Inputfields
 *
 */

.Inputfields .InputfieldHidden {
	display: none;
}

/**
 * Buttons
 *
 */

.InputfieldForm .Inputfields .InputfieldSubmit,
.InputfieldForm .Inputfields .InputfieldButton {
	/* enable horizontal stack of buttons */
	padding: 0 1em;
	margin: 0;
	clear: none;
	background: none;

	.InputfieldHeader {
		/* no need for a header with buttons */
		display: none;
	}

	.InputfieldContent {
		padding: 1em 0 0 0;
		margin: 0;
		margin-top: 0.5em;
		background: none;
		border: none;
	}
}


.Inputfields > .InputfieldSubmit {
	float: left;
	margin-bottom: 0.5em;
	margin-top: 0;
}
	.Inputfields .InputfieldSubmit + .InputfieldSubmit {
		/* two buttons next to each other */
		float: left;
		margin-left: 0.5em;
		margin-top: 0;
	}

	.Inputfields .Inputfield:not(.InputfieldSubmit) + .InputfieldSubmit {
		clear: left;
	}


.Inputfield .LanguageSupport {
	margin-bottom: 1em;
}

/****************************************************************************
 * Render Value Mode
 *
 * Used when only values are being rendered in the form (no inputs)
 *
 */

.InputfieldRenderValueMode {

	.InputfieldSelect li,
	.InputfieldRadios li,
	.InputfieldCheckboxes li {
        	margin: 0;
	}

	.InputfieldSubmit,
	.InputfieldButton {
		display: none;
	}
}



/* Mobile Portrait Size to Mobile Landscape Size (devices and browsers) */
@media only screen and (max-width: 479px) {

	.Inputfield {
		clear: both !important;
		width: 100% !important;
		margin-left: 0 !important;
	}


	#footer #userinfo {
		float: none;
	}
	#footer {
		text-align: center;
	}

	#headline #head_button{
		position: static !important;
		clear: both !important;
		margin-top: 1em;
	}



	.AjaxUploadDropHere {
		display: none !important;
	}


}